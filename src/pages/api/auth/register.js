import { connect } from '@/lib/mongoose'; import User from '@/models/User'; import bcrypt from 'bcryptjs'; import { serialize } from 'cookie'; export default async function handler(req,res){ if(req.method!=='POST') return res.status(405).end(); const { email,password,ref } = req.body; await connect(); if(!email||!password) return res.status(400).json({ error:'Missing' }); const exists = await User.findOne({ email }); if(exists) return res.status(400).json({ error:'User exists' }); const hash = bcrypt.hashSync(password,8); const user = await User.create({ email, password: hash }); if(ref){ const inviter = await User.findById(ref).catch(()=>null); if(inviter){ inviter.credits = (inviter.credits||0)+10; inviter.referrals = inviter.referrals.concat([{ id: user._id, email: user.email }]); await inviter.save(); } } res.setHeader('Set-Cookie', serialize('almukai_uid', String(user._id), { path:'/', httpOnly:true })); res.json({ user: { id: user._id, email: user.email, credits: user.credits } }); }
